apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    name: prometheus-deployment
  name: prometheus
  namespace: monitoring
spec:
  replicas: 2
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
 spec:
  containers:
  - args:
    - --volume-dir=/etc/config
    - --webhook-url=http://localhost:9090/-/reload
    image: jimmidyson/configmap-reload:v0.1
    imagePullPolicy: IfNotPresent
    name: prometheus-server-configmap-reload
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/config
      name: config-volume
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: monitor-prometheus-server-token-sngj9
      readOnly: true
  - args:
    - --config.file=/etc/config/prometheus.yml
    - --storage.tsdb.path=/data
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --web.console.templates=/etc/prometheus/consoles
    - --web.enable-lifecycle
    image: prom/prometheus:v2.2.1
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /-/healthy
        port: 9090
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 30
    name: prometheus-server
    ports:
    - containerPort: 9090
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /-/ready
        port: 9090
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 30
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/config
      name: config-volume
    - mountPath: /data
      name: storage-volume
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: monitor-prometheus-server-token-sngj9
      readOnly: true
  dnsPolicy: ClusterFirst
  initContainers:
  - command:
    - chown
    - -R
    - 65534:65534
    - /data
    image: busybox:latest
    imagePullPolicy: IfNotPresent
    name: init-chown-data
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /data
      name: storage-volume
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: monitor-prometheus-server-token-sngj9
      readOnly: true
  restartPolicy: Always
  securityContext: {}
  serviceAccount: monitor-prometheus-server
  serviceAccountName: monitor-prometheus-server
  terminationGracePeriodSeconds: 300
  volumes:
  - configMap:
      defaultMode: 420
      name: monitor-prometheus-server
    name: config-volume
  - emptyDir: {}
    name: storage-volume
  - name: monitor-prometheus-server-token-sngj9
    secret:
      defaultMode: 420
      secretName: monitor-prometheus-server-token-sngj9
